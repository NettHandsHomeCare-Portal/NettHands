---
version: "3"

services:

  redis:
    image: redis:latest
    container_name: cache_database_netthandz
    restart: unless-stopped
    networks:
      - netthandz-ecosystem
    environment:
      - INFISICAL_TOKEN=${INFISICAL_TOKEN_FOR_REDIS}
    working_dir: /data/cache
    volumes:
      - 'primary_hhd_netthandz:/data/cache'
    ports:
      - '7771:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5m
      timeout: 2m
      retries: 5
      start_period: 2m
      start_interval: 2m

  graphite-statsd:
      container_name: graphite_netthandz
      networks:
        - netthandz-ecosystem
      volumes:
        - 'primary_hhd_netthandz:/graphite'
      ports:
          - '7774:80'
          - '2003-2004:2003-2004'
          - '2023-2024:2023-2024'
          - '8125:8125/udp'
          - '8126:8126'
      image: graphiteapp/graphite-statsd

  grafana:
    container_name: grafana_netthandz
    ports:
        - '7775:3000'
    image: grafana/grafana
    networks:
        - netthandz-ecosystem
    volumes:
      - 'primary_hhd_netthandz:/grafana'

  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: netthandz_Redis_Insight
    restart: unless-stopped
    networks:
        - netthandz-ecosystem
    env_file:
      - .env
    ports:
      - '7777:8001'
    depends_on:
      - redis
    volumes:
      - 'primary_hhd_netthandz:/redis_insight'

  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
      - 9090:9090
      command:
      - --config.file=/etc/prometheus/prometheus.yml
      volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      depends_on:
      - cadvisor

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - redis

volumes:
  primary_hhd_netthandz:


networks:
  netthandz-ecosystem:
    driver: bridge
