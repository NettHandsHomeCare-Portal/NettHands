---
version: "3"

services:
  app:
    image: terrybrooks/netthands:latest
    container_name:  nett_hands_web_portal
    restart: unless-stopped
    networks:
      - netthandz-ecosystem
    volumes:
      - 'primary_hhd_netthandz:/usr/'
    env_file:
      - '.env'
    ports:
      - "6777:8000"

  redis:
    image: redis:latest
    container_name: cache_database_netthandz
    restart: unless-stopped
    networks:
      - netthandz-ecosystem
    working_dir: /data/cache
    privileged: true
    volumes:
      - "/Users/terry-brooks/Documents/Github/NettHands/nhhc/logs/redis.log:/logs/redis.log"
      - "primary_hhd_netthandz:/data/cache"
      - "/Users/terry-brooks/Documents/Github/NettHands/redis.conf:/etc/redis/redis.conf"
      - "/Users/terry-brooks/Documdoents/Github/NettHands/redis_exporter.conf:/etc/redis_exporter.conf"
    ports:
      - '7771:6379'
    command: "redis-server /etc/redis/redis.conf"

  minio:
      tty: true
      restart: unless-stopped
      ports:
          - 9000:9000
          - 9001:9001
      volumes:
          - /Users/terry-brooks/Documents/Github/NettHands/data/minio/obj_nhhc.compliance:/nhhc_compliance
          - /Users/terry-brooks/Documents/Github/NettHands/data/minio/obj_nhhc.employee:/nhhc.employee
      env_file:
          - .env
      container_name: minio_local
      image: minio/minio:latest
      command: minio server ./data/minio --console-address ":9001"


  graphite-statsd:
      container_name: graphite_netthandz
      networks:
        - netthandz-ecosystem
      volumes:
        - 'primary_hhd_netthandz:/graphite'
      ports:
          - '7774:80'
          - '2003-2004:2003-2004'
          - '2023-2024:2023-2024'
          - '8125:8125/udp'
          - '8126:8126'
      image: graphiteapp/graphite-statsd

  grafana:
    container_name: grafana_netthandz
    ports:
        - '7775:3000'
    image: grafana/grafana
    networks:
        - netthandz-ecosystem
    volumes:
      - 'primary_hhd_netthandz:/grafana'

  redis_insight:
    image: postgres
    container_name: netthandz_offline_db
    restart: unless-stopped
    networks:
        - netthandz-ecosystem
    env_file:
      - .env
    ports:
      - '7777:5432'
    volumes:
      - 'primary_hhd_netthandz:/db/data/'

  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
      - 9090:9090
      command:
      - --config.file=/etc/prometheus/prometheus.yml
      volumes:
      - primary_hhd_netthandz:/prometheus/data/11
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  secure_file_server:
    image: nginx

    ports:
      - 9999:90
    volumes:
      - primary_hhd_netthandz:/etc/nginx/nginx.conf:ro
    command: [nginx-debug, '-g', 'daemon off;']
    healthcheck:
      test: ['CMD', '/bin/healthcheck.sh']
      interval: 1m
      timeout: 5s
      retries: 3


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - redis

volumes:
  primary_hhd_netthandz:



networks:
  netthandz-ecosystem:
    driver: bridge
